# language : 언어(플랫폼) 선택
language: java

# sudo : 관리자 권한 갖기
sudo: required

# sevices : 도커 환경 구성하기
services:
  -docker

# 현재 옵션은 오직 master 브랜치에 push될 때만 수행합니다.
branches:
  only:
    - master

# 메이븐을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정합니다.
# Travis CI 서버의 Home
#cache:
#  directories:
#    - '$HOME/.m2'



# before_install : 스크립트 실행할 수 있는 환경 구성
before_install:
  - chmod +x mvnw
  - ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
  - echo "before_install■■■■■■■■■■■start creating an image with dockerfile"
# (참고) https://eojin312.github.io/%EA%B0%9C%EC%9D%B8%EA%B3%B5%EB%B6%80/travis/
# (참고) https://brainbackdoor.tistory.com/17



# script : 테스트 실행할 스크립트
script:
  - ./mvnw test -B
  - echo "scrip■■■■■■■■■■■sstart creating an image with dockerfile"
#script: "./mvnw clean package"       <-   여기서는 프로젝트 내부에 둔 mvnw를 통해 clean & package를 수행합니다.




# after_success : 테스트 성공 후 할일
# --tag(또는 -t) 옵션은 새로 생성할 이미지 이름을 지정한다. 
# "docker build -t <생성할 이미지명>:<태그명> <Dockerfile 위치>"
# 여기서는 리포지토리 이름으로  lhc8607/restapi_deploy을 사용하고 태그로 1.0을 사용했다. 
# 마지막에 점(.)은 Dockerfile의 위치를 경로를 지정한다.
# (저장을 원하지 않을 경우 로그인시 -p대신 --password-stdin 옵션을 이용)
after_success:
  - docker build -t lhc8607/restapi_deploy:1.0 .
  - echo "$DOCKER_PWD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker push lhc8607/restapi_deploy:1.0
  - echo "after_success■■■■■■■■■■■Test success"

#  - docker login -u $DOCKER_ID -p $DOCKER_PWD --password-stdin



# deploy 명령어가 실행되기 전 수행
#before_deploy:
#  - echo "Elastic Beanstalk 배포 전."




# 배포
# provider: 외부 서비스 표시
# region: aws의 S3에 가면 해당 s3버킷이름의 리전을 작성해줍니다.   서울 : ap-northeast-2    버지니아 북구 : us-east-1
# app: aws의 Elastic Beanstalk의 "애플리케이션 이름"
# env: aws의 Elastic Beanstalk에서 app이 생성하고 나오는 "환경 이름"
# bucket_name: S3버킷이름 *      ( elasticbeanstalk을 위한 s3버켓 이름 )
# bucket_path: 어플리케이션 이름과 동일
# access_key_id, secret_access_key : aws의 IAM을 통해 설정 하면 "액세스 키ID", "비밀 액세스 키" 값이 생김
deploy:
  provider: elasticbeanstalk
  region: "ap-northeast-2"
  app: "docker-deploy-app"
  env: "Dockerdeployapp-env"
  bucket_name: elasticbeanstalk-ap-northeast-2-805778698340
  bucket_path: "docker-deploy-app"
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY



# deploy 명령어가 실행 후 수행
#after_deploy:
#  - echo "Elastic Beanstalk 배포 후."
  - echo "Elastic Beanstalk 배포 진행중입니다."



# 3
#script: "./mvnw clean package"



# CI 실행 완료시 메일로 알람
# Travis CI 실행 완료 시 자동으로 알람이 가도록 설정합니다.
# 4
#notifications:
#  email:
#    recipients:
#      - akvs75@naver.com
